<?php
class pointInArea {
	var $pointOnVertex = true; // Check if the point sits exactly on one of the vertices?

	function pointInPolygon($point, $pointOnVertex = true) {
		//Rough area for United Kingdom
		$polygon = array("51.4707930937364 -12.73522542965434","51.32858978404663 -12.60281158878985","51.18630206897804 -12.47206058841472","50.93796819273744 -12.21459897732615","50.86818021028387 -12.08886551454883","50.72603693036716 -11.95961557517793","50.54845160052413 -11.7728992839265","50.4429852149811 -11.59094018504018","50.30398252084206 -11.28454521855974","50.23350010262867 -11.16420783217029","50.09402370232366 -10.80555688703298","49.95562811456509 -10.27214323628454","49.81436536758317 -9.80557911802546","49.70741257931547 -9.343041862098865","49.67131765210497 -9.054246770633819","49.59796077233737 -8.653278407662677","49.56049870593478 -8.425409385714048","49.48594446935084 -8.144016116930326","49.48408046176758 -7.972773836685619","49.4811888665412 -7.744795553176809","49.47689406303653 -7.460502826978006","49.47177318851355 -7.177210098710595","49.46590068304209 -6.894665030530025","49.45777053114798 -6.55689024282761","49.44532164046717 -6.10796636447718","49.47398089056892 -5.88057804013425","49.46651121853079 -5.657206423370037","49.45653248056848 -5.378558024734581","49.48357331550572 -5.151901448696591","49.50536429942831 -4.814512166502132","49.49564493571487 -4.592854871524537","49.5537503921644 -4.306742332734395","49.57833226574784 -4.080848092978785","49.63498171641978 -3.794488147401945","49.69374928343472 -3.563387381211599","49.75195855903996 -3.332056463230917","49.84165226523894 -3.039531784526869","49.86342083911202 -2.81322053928128","49.88458664199914 -2.587246918905453","49.89780227512364 -2.251517414919339","49.91779344163664 -2.025635578003074","49.96843301114492 -1.738430603981647","49.98312294850367 -1.45782957498388","50.03213682094486 -1.170394729539456","50.08481795675609 -0.9373263577364688","50.097329569046 -0.6566796213094206","50.14882479563904 -0.4231784670524796","50.23480880135033 -0.1815680039523993","50.28520113399527 0.05276387048998243","50.36995084376237 0.2954557180401585","50.45947434647172 0.4843302074602884","50.57811701818355 0.7368973473806273","50.66129020368101 0.9820187818067483","50.74942875807572 1.172932228379255","50.87201193576457 1.373393465024484","50.99988462712165 1.519600150352214","51.1217873356212 1.721959861462936","51.21443732469938 1.860560251873429","51.34754228467371 1.95354390162972","51.4746304676831 2.10282509646885","51.61352782922656 2.141128429040839","51.75243137454712 2.179670607719682","51.88533295385159 2.27471733068644","52.0181890413184 2.370350516077262","52.15710890509971 2.40998605393338","52.33078575425907 2.45989162359302","52.47596479449283 2.443119115846864","52.62120009873715 2.426226777388314","52.80130217078121 2.419313444005271","52.91184068762527 2.392082495259986","53.09208137359929 2.384968695439353","53.1966401855187 2.41549734956015","53.37711705843481 2.408446280987153","53.55168985389101 2.459894466040917","61.1885028369666 0.8296846786504109","61.22552969529453 0.3774374059366026","61.26696378552393 -0.1520010506098957","61.26191628509599 -0.6161218539466917","61.25016252459813 -1.004322159612729","61.2040862907993 -1.476269163377854","61.11763687930237 -1.953813105551014","61.02444148134731 -2.352456039586804","60.97440799748269 -2.819175734205141","60.8776412880079 -3.139852541546739","60.75058306254869 -3.614928019074402","60.65109511287643 -3.930021165703067","60.55091540702716 -4.243027971365033","60.45005313765863 -4.553951191921","60.27014495498172 -4.867079954394975","60.12931658959865 -5.175084841412575","59.989228534737 -5.481740358613262","59.8472644923949 -5.783980328743699","59.70587202562361 -6.084832551520614","59.4909733846625 -6.459002455875801","59.41703085524827 -6.53327809428963","59.23429469019837 -6.754985780337501","59.05128268298608 -6.973832079142835","51.4707930937364 -12.73522542965434");

		$this->pointOnVertex = $pointOnVertex;

		// Transform string coordinates into arrays with x and y values
		$point = $this->pointStringToCoordinates($point);
		$vertices = array(); 
		foreach ($polygon as $vertex) {
			$vertices[] = $this->pointStringToCoordinates($vertex); 
		}

		// Check if the point sits exactly on a vertex
		if ($this->pointOnVertex == true and $this->pointOnVertex($point, $vertices) == true) {
			return "vertex";
		}

		// Check if the point is inside the polygon or on the boundary
		$intersections = 0; 
		$vertices_count = count($vertices);

		for ($i=1; $i < $vertices_count; $i++) {
			$vertex1 = $vertices[$i-1]; 
			$vertex2 = $vertices[$i];
			if ($vertex1['y'] == $vertex2['y'] and $vertex1['y'] == $point['y'] and $point['x'] > min($vertex1['x'], $vertex2['x']) and $point['x'] < max($vertex1['x'], $vertex2['x'])) { // Check if point is on an horizontal polygon boundary
				return "boundary";
			}
			if ($point['y'] > min($vertex1['y'], $vertex2['y']) and $point['y'] <= max($vertex1['y'], $vertex2['y']) and $point['x'] <= max($vertex1['x'], $vertex2['x']) and $vertex1['y'] != $vertex2['y']) { 
				$xinters = ($point['y'] - $vertex1['y']) * ($vertex2['x'] - $vertex1['x']) / ($vertex2['y'] - $vertex1['y']) + $vertex1['x']; 
				if ($xinters == $point['x']) { // Check if point is on the polygon boundary (other than horizontal)
					return "boundary";
				}
				if ($vertex1['x'] == $vertex2['x'] || $point['x'] <= $xinters) {
					$intersections++; 
				}
			} 
		} 
		// If the number of edges we passed through is odd, then it's in the polygon. 
		if ($intersections % 2 != 0) {
			return true;
		} else {
			return false;
		}
	}

	function pointOnVertex($point, $vertices) {
		foreach($vertices as $vertex) {
			if ($point == $vertex) {
				return true;
			}
		}
	}

	function pointStringToCoordinates($pointString) {
		$coordinates = explode(" ", $pointString);
		return array("x" => $coordinates[0], "y" => $coordinates[1]);
	}
}
?>